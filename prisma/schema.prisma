generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "sqlserver"
  url      = env("HELPDESK_DB")
}

model Categorias {
  id            Int             @id(map: "PK__Categori__3213E83F41FE3ADC") @default(autoincrement())
  nombre        String          @db.VarChar(150)
  activo        Boolean?        @default(true, map: "DF__Categoria__activ__4BAC3F29")
  SubCategorias SubCategorias[]
}

model CategoriasPorTickets {
  id             Int           @id(map: "PK__Categori__3213E83F0CF15DDD") @default(autoincrement())
  idTicket       Int
  idSubCategoria Int
  SubCategorias  SubCategorias @relation(fields: [idSubCategoria], references: [id], onUpdate: NoAction, map: "FK__Categoria__idSub__6E01572D")
  Tickets        Tickets       @relation(fields: [idTicket], references: [id], onUpdate: NoAction, map: "FK__Categoria__idTic__6D0D32F4")
}

model Comentarios {
  id         String    @id(map: "PK__Comentar__3213E83F12655419") @default(dbgenerated("newid()"), map: "DF__Comentarios__id__68487DD7") @db.UniqueIdentifier
  idTicket   Int
  idUsuario  String    @db.UniqueIdentifier
  comentario String    @db.VarChar(Max)
  fecha      DateTime? @default(now(), map: "DF__Comentari__fecha__693CA210") @db.DateTime
  Tickets    Tickets   @relation(fields: [idTicket], references: [id], onUpdate: NoAction, map: "FK__Comentari__idTic__6A30C649")
}

model DocumentoPorTicket {
  id            String  @id(map: "PK__Document__3213E83F7914F189") @default(dbgenerated("newid()"), map: "DF__DocumentoPor__id__6477ECF3") @db.UniqueIdentifier
  idTicket      Int
  enlace        String  @db.VarChar(250)
  tipoDocumento String? @db.VarChar(150)
  Tickets       Tickets @relation(fields: [idTicket], references: [id], onUpdate: NoAction, map: "FK__Documento__idTic__656C112C")
}

model Estados {
  id         Int          @id(map: "PK__Estados__3213E83F29B2BDAF") @default(autoincrement())
  nombre     String       @db.VarChar(150)
  activo     Boolean?     @default(true, map: "DF__Estados__activo__52593CB8")
  logTickets logTickets[]
  Tickets    Tickets[]
}

model logTickets {
  id       String    @id(map: "PK__logTicke__3213E83F3FA769C1") @default(dbgenerated("newid()"), map: "DF__logTickets__id__5EBF139D") @db.UniqueIdentifier
  idTicket Int
  idEstado Int
  fecha    DateTime? @default(now(), map: "DF__logTicket__fecha__5FB337D6") @db.Date
  Estados  Estados   @relation(fields: [idEstado], references: [id], onUpdate: NoAction, map: "FK__logTicket__idEst__619B8048")
  Tickets  Tickets   @relation(fields: [idTicket], references: [id], onUpdate: NoAction, map: "FK__logTicket__idTic__60A75C0F")
}

model PersonalDeSoporte {
  id        Int       @id(map: "PK__Personal__3213E83FBDF6A4ED") @default(autoincrement())
  idUsuario String    @unique(map: "PersonalDeSoporte_UN") @db.UniqueIdentifier
  nombre    String?   @db.VarChar(150)
  Tickets   Tickets[]
}

model Prioridades {
  id      Int       @id(map: "PK__Priorida__3213E83F24E42D28") @default(autoincrement())
  nombre  String    @db.VarChar(150)
  color   String    @db.VarChar(50)
  activo  Boolean?  @default(true, map: "DF__Prioridad__activ__5535A963")
  Tickets Tickets[]
}

model SubCategorias {
  id                   Int                    @id(map: "PK__SubCateg__3213E83F18183AC0") @default(autoincrement())
  nombre               String                 @db.VarChar(150)
  idCategoria          Int
  activo               Boolean?               @default(true, map: "DF__SubCatego__activ__4E88ABD4")
  Categorias           Categorias             @relation(fields: [idCategoria], references: [id], onUpdate: NoAction, map: "FK__SubCatego__idCat__4F7CD00D")
  CategoriasPorTickets CategoriasPorTickets[]
}

model Tickets {
  id                   Int                    @id(map: "PK__Tickets__3213E83F07D2C4DE") @default(autoincrement())
  titulo               String                 @db.VarChar(150)
  descripcion          String?                @db.VarChar(Max)
  solicitudDe          String                 @db.UniqueIdentifier
  asignadoA            Int?
  idPrioridad          Int
  idEstado             Int
  fechaSolicitud       DateTime?              @default(now(), map: "DF__Tickets__fechaSo__59063A47") @db.DateTime
  activo               Boolean?               @default(true, map: "DF__Tickets__activo__59FA5E80")
  PersonalDeSoporte    PersonalDeSoporte?     @relation(fields: [asignadoA], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Tickets__asignad__5812160E")
  Estados              Estados                @relation(fields: [idEstado], references: [id], onUpdate: NoAction, map: "FK__Tickets__idEstad__5BE2A6F2")
  Prioridades          Prioridades            @relation(fields: [idPrioridad], references: [id], onUpdate: NoAction, map: "FK__Tickets__idPrior__5AEE82B9")
  CategoriasPorTickets CategoriasPorTickets[]
  Comentarios          Comentarios[]
  DocumentoPorTicket   DocumentoPorTicket[]
  logTickets           logTickets[]
}
